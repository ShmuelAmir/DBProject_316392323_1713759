-- SELECT --

-- Rooms with more that 5 patients
SELECT DEPARTMENT.NAME AS DEPARTMENT_NAME, 
       PATIENT.NAME AS PATIENT_NAME, ROOM.TYPE
FROM PATIENT
LEFT JOIN ROOM USING (ROOMID)
LEFT JOIN DEPARTMENT USING (DEPARTMENTID)
WHERE DEPARTMENTID IN (
  SELECT DEPARTMENTID
  FROM (
    SELECT DEPARTMENTID, COUNT(PATIENTID) AS PATIENT_COUNT
    FROM PATIENT
    LEFT JOIN ROOM USING (ROOMID)
    LEFT JOIN DEPARTMENT USING (DEPARTMENTID)
    GROUP BY DEPARTMENTID
  )
  WHERE PATIENT_COUNT > 5
);

-- Medications that expired while being treted with them
SELECT MEDICATION.NAME AS M_NAME, DOCTOR.NAME AS D_NAME, DOCTOR.PHONE AS D_PHONE, 
       PATIENT.NAME AS P_NAME, PATIENT.PHONE AS P_PHONE, EXPIRATIONDATE, TREATMENTDATE
FROM MEDICATION 
INNER JOIN MEDICATION_TREATMENT USING(MEDICATIONID)
INNER JOIN TREATMENT USING(TREATMENTID)
INNER JOIN DOCTOR USING(DOCTORID)
INNER JOIN PATIENT USING(PATIENTID)
--WHERE EXPIRATIONDATE < TREATMENTDATE
WHERE EXTRACT(YEAR FROM TREATMENTDATE) > EXTRACT(YEAR FROM EXPIRATIONDATE)
OR EXTRACT(MONTH FROM TREATMENTDATE) > EXTRACT(MONTH FROM EXPIRATIONDATE)
OR EXTRACT(DAY FROM TREATMENTDATE) - EXTRACT(DAY FROM EXPIRATIONDATE) > 10

-- Medications with max use that gonig to run out
SELECT MEDICATIONID, NAME, QUANTITYINSTOCK FROM MEDICATION
WHERE QUANTITYINSTOCK < 30
AND MEDICATIONID IN (
    SELECT MEDICATIONID FROM TREATMENT
    INNER JOIN MEDICATION_TREATMENT USING(TREATMENTID)
    INNER JOIN MEDICATION USING(MEDICATIONID)
    GROUP BY MEDICATIONID
    HAVING COUNT(TREATMENTID) >= ALL(
          SELECT COUNT(TREATMENTID) FROM TREATMENT
          INNER JOIN MEDICATION_TREATMENT USING(TREATMENTID)
          INNER JOIN MEDICATION USING(MEDICATIONID)
          GROUP BY MEDICATIONID 
    )
)
ORDER BY QUANTITYINSTOCK

-- Doctors that treat the most patients
SELECT DOCTORID, NAME, SPECIALTY, PHONE, COUNT(TREATMENTID) AS treat_count
FROM (
     SELECT * FROM DOCTOR
     INNER JOIN TREATMENT USING(DOCTORID)
     WHERE TREATMENTDATE >= TO_DATE('2004', 'YYYY')
)
GROUP BY DOCTORID, NAME, SPECIALTY, PHONE
HAVING COUNT(TREATMENTID) >= 5
ORDER BY treat_count DESC 


-- DELETE --

-- Delete empty departments
SAVEPOINT sav1;

SELECT COUNT(*) as count_before FROM DEPARTMENT;

DELETE FROM DEPARTMENT D
WHERE NOT EXISTS (
      SELECT DEPARTMENTID
      FROM DOCTOR
      WHERE D.DEPARTMENTID = DOCTOR.DEPARTMENTID
) 
AND DEPARTMENTID NOT IN (
      SELECT DISTINCT DEPARTMENTID
      FROM ROOM
);

SELECT COUNT(*) as count_after FROM DEPARTMENT;

ROLLBACK TO sav1;

-- Delete bad doctors
SAVEPOINT sav2;

SELECT COUNT(*) as count_before FROM DOCTOR;

DELETE FROM DOCTOR
WHERE DOCTORID IN (
  SELECT DISTINCT DOCTORID
  FROM MEDICATION 
  INNER JOIN MEDICATION_TREATMENT USING(MEDICATIONID)
  INNER JOIN TREATMENT USING(TREATMENTID)
  INNER JOIN DOCTOR USING(DOCTORID)
  INNER JOIN PATIENT USING(PATIENTID)
  WHERE EXPIRATIONDATE < TREATMENTDATE
);

SELECT COUNT(*) as count_after FROM DOCTOR;

ROLLBACK TO sav2;


-- UPDATE --
SAVEPOINT sav3;

SELECT COUNT(*) as count_before FROM MEDICATION
WHERE QUANTITYINSTOCK = 10;

UPDATE MEDICATION
SET QUANTITYINSTOCK = 50,
    EXPIRATIONDATE = ADD_MONTHS(CURRENT_DATE, 60)
WHERE QUANTITYINSTOCK = 10;

SELECT COUNT(*) as count_after FROM MEDICATION
WHERE QUANTITYINSTOCK = 10;

ROLLBACK TO sav3;

SAVEPOINT sav4;

SELECT ROOMID as room_before FROM PATIENT
WHERE PATIENTID = 56;

UPDATE Patient
SET RoomID = (
    SELECT RoomID
    FROM Room
    WHERE Type = 'Private'
      AND (
        SELECT COUNT(*)
        FROM Patient
        WHERE Patient.RoomID = Room.RoomID
      ) < 1
      AND ROWNUM = 1 -- Select the first available room that meets the criteria
)
WHERE PATIENTID = 56;


SELECT ROOMID as room_after FROM PATIENT
WHERE PATIENTID = 56;

ROLLBACK TO sav4;


